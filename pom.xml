<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.in28minutes.microservices</groupId>
	<artifactId>spring-cloud-eureka-server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>spring-cloud-eureka-server</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	
	<distributionManagement>
		<repository>
			<id>nexus-releases</id>
			<url>http://localhost:8081/repository/maven-releases</url>
		</repository>
		<snapshotRepository>
			<id>nexus-snapshots</id>
			<url>http://localhost:8081/repository/maven-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>
	
	<scm>
		<connection>scm:git:git@github.com:salvadorsuz/spring-cloud-eureka-server.git</connection>
		<developerConnection>scm:git:git@github.com:salvadorsuz/spring-cloud-eureka-server.git</developerConnection>
		<url>scm:git:git@github.com:salvadorsuz/spring-cloud-eureka-server.git</url>
      	<tag>HEAD</tag>
  	</scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Finchley.SR2</spring-cloud.version>
		<maven.javadoc.failOnError>false</maven.javadoc.failOnError>
		<maven.javadoc.skip>true</maven.javadoc.skip>
		<docker.image.name>salvadorsuz/spring-cloud-eureka-server</docker.image.name>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<plugin>
	          <groupId>org.apache.maven.plugins</groupId>
	          <artifactId>maven-release-plugin</artifactId>
	          <version>2.5.1</version>
	          <dependencies>
	            <dependency>
	              <groupId>org.apache.maven.shared</groupId>
	              <artifactId>maven-invoker</artifactId>
	              <version>2.2</version>
	            </dependency>
	          </dependencies>
	          <configuration>
			    <checkModificationExcludes>
			    <checkModificationExclude>pom.xml</checkModificationExclude>
			    </checkModificationExcludes>
			  </configuration>
	        </plugin>
	        
	        <plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-javadoc-plugin</artifactId>
			    <version>2.9.1</version>
			    <executions>
			        <execution>
			            <id>attach-javadocs</id>
			            <goals>
			                <goal>jar</goal>
			            </goals>
			        </execution>
			    </executions>
			    <configuration>
			        <failOnError>false</failOnError>
			    </configuration>
			</plugin>
			
			<plugin>
			  <groupId>com.spotify</groupId>
			  <artifactId>dockerfile-maven-plugin</artifactId>
			  <version>1.4.3</version>
			  <executions>
			    <execution>
			      <id>default</id>
			      <goals>
			        <goal>build</goal>
			        <goal>push</goal>
			      </goals>
			    </execution>
			  </executions>
			  <configuration>
                <repository>${docker.image.name}</repository>
			    <tag>${project.version}</tag>
			    <buildArgs>
			      <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
			    </buildArgs>
			  </configuration>
			</plugin>
			
		</plugins>
		
		<pluginManagement>
		  <plugins>
		    <plugin>
		      <groupId>org.apache.maven.plugins</groupId>
		      <artifactId>maven-javadoc-plugin</artifactId>
		      <version>2.9.1</version>
		    </plugin>
		  </plugins>
		</pluginManagement>
		
	</build>

</project>
